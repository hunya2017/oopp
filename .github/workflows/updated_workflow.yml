name: immortalwrt-all

on:
  watch:
    types: [ started ]
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: false
        type: boolean
      CACHE_BUILD:
        description: '缓存加速'
        required: true
        default: true
        type: boolean
      UPLOAD_FIRMWARE:
        description: '是否上传固件'
        required: true
        default: true
        type: boolean
      UPLOAD_BUILDINFO:
        description: '是否上传配置文件'
        required: true
        default: true
        type: boolean
      UPLOAD_PACKAGE:
        description: '是否上传插件'
        required: true
        default: true
        type: boolean
      UPLOAD_RELEASE:
        description: '是否发布到 Releases'
        required: true
        default: true
        type: boolean

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: openwrt-24.10
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: config/immortalwrt.info
  Firmware_Name: immortalwrt-all
  DIY_P1_SH: smpackage/immortalwrt-all-1.sh
  DIY_P2_SH: smpackage/immortalwrt-all-2.sh
  SETTINGS_PATCH: smpackage/settings.patch
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_BUILDINFO: true
  UPLOAD_PACKAGE: true
  UPLOAD_RELEASE: true
  GITHUB_TOKEN: ${{ secrets.GIT_USER_TOKEN }}
  TZ: Asia/Shanghai

jobs:
  build_openwrt:
    name: immortalwrt-all
    runs-on: Ubuntu-22.04

    steps:
    - name: 释放磁盘空间
      uses: endersonmenezes/free-disk-space@v2
      with:
        remove_android: true
        remove_dotnet: true
        remove_haskell: true
        remove_tool_cache: true
        remove_swap: true
        remove_packages: "azure-cli google-cloud-cli microsoft-edge-stable google-chrome-stable firefox postgresql* temurin-* *llvm* mysql* dotnet-sdk-*"
        remove_packages_one_command: true
        remove_folders: "/usr/share/swift /usr/share/miniconda /usr/share/az* /usr/share/glade* /usr/local/lib/node_modules /usr/local/share/chromium /usr/local/share/powershell"
        testing: false

    - name: 初始化系统环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL
        sudo docker image prune --all --force
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev rename
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: 更新时区、编译时间
      id: date
      run: |
        sudo timedatectl set-timezone "$TZ"
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
        echo "FILE_TIME=$(date +"%m-%d %H.%M")" >> $GITHUB_ENV
        echo "FILE_TIME1=$(date "+%Y年%m月%d日-%H点%M分")" >> $GITHUB_ENV
        echo "FILE_TIME2=$(date "+%Y%m%d-%H%M")" >> $GITHUB_ENV
        START_TIME=`date +'%Y-%m-%d %H:%M:%S'`
        echo "START_SECONDS=$(date --date="$START_TIME" +%s)" >> $GITHUB_ENV

    - name: 准备完成
      uses: actions/checkout@v4

    - name: 下载源代码
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL openwrt
        cd openwrt
        if [ -n "$REPO_TAG" ]; then
          git fetch --tags
          git checkout $REPO_TAG
        else
          git checkout $REPO_BRANCH
        fi
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: 缓存
      uses: klever1988/cachewrtbuild@main
      if: github.event.inputs.CACHE_BUILD == 'true'
      with:
        ccache: 'true'
        mixkey: '${{ env.Firmware_Name }}'
        prefix: ${{ github.workspace }}/openwrt

    - name: 执行自定义脚本1
      run: |
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: 更新源
      run: cd openwrt && ./scripts/feeds update -a

    - name: 安装源和修改默认设置
      run: |
        cd openwrt
        ./scripts/feeds install -a
        echo "=== 开始修改默认设置文件 ==="

        # 查找default-settings目录
        DEFAULT_SETTINGS_PATH=""
        if [ -d "package/emortal/default-settings" ]; then
          DEFAULT_SETTINGS_PATH="package/emortal/default-settings"
        elif [ -d "package/lean/default-settings" ]; then
          DEFAULT_SETTINGS_PATH="package/lean/default-settings"
        else
          echo "查找所有可能的default-settings目录:"
          find package/ -name "*default*" -type d
          DEFAULT_SETTINGS_PATH=$(find package/ -name "*default*" -type d | head -1)
        fi

        if [ -z "$DEFAULT_SETTINGS_PATH" ]; then
          echo "错误: 未找到default-settings目录"
          exit 1
        fi

        echo "使用目录: $DEFAULT_SETTINGS_PATH"
        cd "$DEFAULT_SETTINGS_PATH"

        # 检查是否存在99-default-settings文件
        if [ -f "files/99-default-settings" ]; then
          echo "✓ 找到99-default-settings文件"
          cp files/99-default-settings files/99-default-settings.bak
          echo "✓ 已备份原文件"
          
          # 方法1: 使用patch方式修改（如果存在patch文件）
          if [ -e "$GITHUB_WORKSPACE/$SETTINGS_PATCH" ]; then
            echo "尝试使用patch方式修改..."
            cp "$GITHUB_WORKSPACE/$SETTINGS_PATCH" ./settings.patch
            if patch --dry-run -p1 < settings.patch >/dev/null 2>&1; then
              patch -p1 < settings.patch
              echo "✓ patch方式修改成功"
            else
              echo "⚠ patch方式失败，使用sed方式修改"
              cp files/99-default-settings.bak files/99-default-settings
            fi
          fi
          
          # 方法2: 使用sed直接在exit 0之前插入内容
          if ! grep -q "ImmortalWrt-Custom" files/99-default-settings; then
            echo "使用sed方式添加自定义设置..."
            
            # 写入自定义设置到临时文件
            echo '# === 自定义设置开始 ===' > /tmp/custom_settings
            echo 'echo "应用自定义默认设置..."' >> /tmp/custom_settings
            echo '' >> /tmp/custom_settings
            echo '# 系统设置' >> /tmp/custom_settings
            echo "uci set system.@system[0].hostname='ImmortalWrt-Custom'" >> /tmp/custom_settings
            echo "uci set system.@system[0].timezone='CST-8'" >> /tmp/custom_settings
            echo "uci set system.@system[0].zonename='Asia/Shanghai'" >> /tmp/custom_settings
            echo '' >> /tmp/custom_settings
            echo '# 网络设置' >> /tmp/custom_settings
            echo "uci set network.lan.ipaddr='192.168.10.1'" >> /tmp/custom_settings
            echo "uci set network.lan.netmask='255.255.255.0'" >> /tmp/custom_settings
            echo '' >> /tmp/custom_settings
            echo '# DHCP设置' >> /tmp/custom_settings
            echo "uci set dhcp.lan.start='100'" >> /tmp/custom_settings
            echo "uci set dhcp.lan.limit='150'" >> /tmp/custom_settings
            echo "uci set dhcp.lan.leasetime='12h'" >> /tmp/custom_settings
            echo '' >> /tmp/custom_settings
            echo '# 删除IPv6设置' >> /tmp/custom_settings
            echo 'uci delete network.lan.ip6assign 2>/dev/null' >> /tmp/custom_settings
            echo 'uci delete network.wan6 2>/dev/null' >> /tmp/custom_settings
            echo 'uci delete dhcp.lan.dhcpv6 2>/dev/null' >> /tmp/custom_settings
            echo 'uci delete dhcp.lan.ra 2>/dev/null' >> /tmp/custom_settings
            echo '' >> /tmp/custom_settings
            echo '# 设置默认密码' >> /tmp/custom_settings
            echo "echo 'root:password' | chpasswd" >> /tmp/custom_settings
            echo '' >> /tmp/custom_settings
            echo '# NTP服务器设置' >> /tmp/custom_settings
            echo 'uci delete system.ntp.server 2>/dev/null' >> /tmp/custom_settings
            echo "uci add_list system.ntp.server='ntp.aliyun.com'" >> /tmp/custom_settings
            echo "uci add_list system.ntp.server='time.pool.aliyun.com'" >> /tmp/custom_settings
            echo "uci add_list system.ntp.server='cn.pool.ntp.org'" >> /tmp/custom_settings
            echo '' >> /tmp/custom_settings
            echo '# 无线设置（如果存在）' >> /tmp/custom_settings
            {
              echo 'wifi_device=$(uci show wireless 2>/dev/null | grep "wireless\.radio" | cut -d"." -f2 | cut -d"=" -f1 | head -1)'
              echo 'if [ -n "$wifi_device" ]; then'
              echo '    uci set wireless.$wifi_device.disabled="0"'
              echo '    uci set wireless.$wifi_device.country="CN"'
              echo '    uci set wireless.$wifi_device.channel="auto"'
              echo '    wifi_iface=$(uci show wireless 2>/dev/null | grep "wireless\.default_" | cut -d"." -f2 | cut -d"=" -f1 | head -1)'
              echo '    if [ -n "$wifi_iface" ]; then'
              echo '        uci set wireless.$wifi_iface.ssid="ImmortalWrt-WiFi"'
              echo '        uci set wireless.$wifi_iface.key="12345678"'
              echo '        uci set wireless.$wifi_iface.encryption="psk2"'
              echo '        uci set wireless.$wifi_iface.disabled="0"'
              echo '    fi'
              echo 'fi'
            } >> /tmp/custom_settings
            echo 'echo "自定义设置应用完成"' >> /tmp/custom_settings
            echo '# === 自定义设置结束 ===' >> /tmp/custom_settings
            echo "$CUSTOM_SETTINGS" > /tmp/custom_settings

            if grep -q "exit 0" files/99-default-settings; then
              sed -i '/exit 0/i\# === 插入自定义设置 ===' files/99-default-settings
              sed -i '/# === 插入自定义设置 ===/r /tmp/custom_settings' files/99-default-settings
              sed -i '/# === 插入自定义设置 ===/d' files/99-default-settings
              echo "✓ 使用sed方式修改成功"
            else
              cat /tmp/custom_settings >> files/99-default-settings
              echo "exit 0" >> files/99-default-settings
              echo "✓ 在文件末尾添加自定义设置"
            fi
            rm -f /tmp/custom_settings
          else
            echo "ℹ 文件已包含自定义设置，跳过修改"
          fi
          chmod +x files/99-default-settings
        else
          echo "⚠ 未找到99-default-settings文件，列出files目录内容:"
          ls -la files/ 2>/dev/null || echo "files目录不存在"
        fi

        echo "=== 修改完成，显示最终文件内容 ==="
        if [ -f "files/99-default-settings" ]; then
          echo "文件内容:"
          cat files/99-default-settings
        fi
